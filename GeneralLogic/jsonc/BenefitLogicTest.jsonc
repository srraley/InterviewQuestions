/*
-----------------------------
-- Total Compensation Test Part 2 --
*This is done as a follow up for the Original Total Compensation Test Part 1 
-----------------------------

Job Information
--------------------
Each employee can elect to have a certain amount of their benefits wages paid to certain benefits. These benefits can also be broken 
down into specific categories based on the benefit type.

Example Explanation:
If an employee received 50 dollars in benefit wages and their elections are as follows: 

401K : 50 % 
HSA  : 50 % 

Then of the 50 dollars we know that the employee will contribute $25 to 401K and $25 to HSA. 

Example 

Steve -> Benefit Total: $50 

Steve 401K Percent -> 50%
Steve HSA Percent -> 50% 

Steve 401K Contribution -> $25 (50 * .5)
Steve HSA Contribution -> $25  (50 * .5)

Additionally for some benefits (401K) this amount has to be further broken down based on what investments the employee has. For example 
if steve had 50% of his portfolio in Apple (APPL) and 50% of his portfolio in Telsa (TSLA) then he would end up contributing $12.50 to Apple and $12.50 to Telsa. 

Example 

Steve -> 401K Total: $25 

Steve APPL Percent: 50% 
Steve TSLA Percent: 50% 

Steve Contribution to APPL: $12.50 (25 * .5) 
Steve Contribution to TSLA: $12.50 (25 * .5) 


Test Description
--------------------
Using the provided JSON data below, process the data to
determine how much in each benefit the employee will contribute from the calculated 
total benefit wage. In addition calculate how much in investments the employee will contribute based on their 401K total contribution

* Example JSON Output for Benefit Calculated:
[
    {
        "employee": "Steve",
        "401K":$25
        "HSA":$25
    },
    ...
]


* Example JSON Output for Investment Contribution:
[
    {
        "employee": "Steve",
        "APPL":$12.50
        "TSLA":$12.50
    },
    ...
]

**
    No restrictions on coding languge, use any language you
    prefer to solve the problem.

    You can reformat the provided JSON into a different format
    if needed by the language you use.  Your output can be in any
    readable/consumable format.
**
*/


/*Sample Input Json Based off of Output from part 1 */ 
[
    {
        "employee": "Steve",
        "regular": 38,
        "overtime": 0,
        "doubletime": 0,
        "wageTotal": 760.00,
        "benefitTotal:100" 
    },
    ...
]



/*Sample Input Json for Benefit Allocations */
[{
    "BenefitAllocations": [
      {
        "employee": "Steve",
        "BenefitPercent": [
          {
            "401K": 50,
            "FSA": 20,
            "HSA": 10,
            "Dental": 20
          }
        ]
      },
      {
        "employee": "Alex",
        "BenefitPercent": [
          {
            "401K": 88,
            "FSA": 12
          }
        ]
      }
    ]
  }
]


/*Sample Input JSON for investment allocations*/
[{
    "InvestmentAllocations": [
      {
        "employee": "Steve",
        "InvestmentsPercent": [
          {
            "APPL": 25,
            "TSLA": 25,
            "MSFT": 25,
            "GME": 25
          }
        ]
      },
      {
        "employee": "Alex",
        "InvestmentsPercent": [
          {
            "TSLA": 33,
            "ADBE": 33,
            "GME": 34
          }
        ]
      }
    ]
  }]